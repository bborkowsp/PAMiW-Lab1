<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
	xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
	xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    x:Class="P12MAUI.Client.MainPage"
	xmlns:viewmodel="clr-namespace:P12MAUI.Client.ViewModels"
	xmlns:converters="clr-namespace:P12MAUI.Client.Resources"
    BackgroundColor="{DynamicResource ThemeBackgroundColor}" Loaded="Loaded_Event">
	<ContentPage.Resources>
		<ResourceDictionary>
			<Style x:Key="TransparentButtonStyle" TargetType="Button">
				<Setter Property="TextColor" Value="{DynamicResource ButtonTextColor}" />
				<Setter Property="FontFamily" Value="OpenSansRegular"/>
				<Setter Property="FontSize" Value="14"/>
				<Setter Property="CornerRadius" Value="8"/>
				<Setter Property="Padding" Value="14,10"/>
				<Setter Property="MinimumHeightRequest" Value="44"/>
				<Setter Property="MinimumWidthRequest" Value="44"/>
				<Setter Property="BackgroundColor" Value="Transparent"/>
				<Setter Property="VisualStateManager.VisualStateGroups">
					<VisualStateGroupList>
						<VisualStateGroup x:Name="CommonStates">
							<VisualState x:Name="Normal" />
							<VisualState x:Name="Disabled">
								<VisualState.Setters>
									<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray950}, Dark={StaticResource Gray200}}" />
								</VisualState.Setters>
							</VisualState>
							<VisualState x:Name="PointerOver">
								<VisualState.Setters></VisualState.Setters>
							</VisualState>
						</VisualStateGroup>
					</VisualStateGroupList>
				</Setter>
			</Style>
			<Style TargetType="Entry">
				<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource Black}}" />
				<Setter Property="FontFamily" Value="OpenSansRegular"/>
				<Setter Property="FontSize" Value="14" />
				<Setter Property="MinimumHeightRequest" Value="44"/>
				<Setter Property="MinimumWidthRequest" Value="44"/>
				<Setter Property="VisualStateManager.VisualStateGroups">
					<VisualStateGroupList>
						<VisualStateGroup x:Name="CommonStates">
							<VisualState x:Name="Normal" />
							<VisualState x:Name="Disabled">
								<VisualState.Setters>
									<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource LightSuggestionInFormColor}, Dark={StaticResource DarkSuggestionInFormColor}}" />
								</VisualState.Setters>
							</VisualState>
						</VisualStateGroup>
						<VisualStateGroup x:Name="PlaceholderStates">
							<VisualState x:Name="Placeholder">
								<VisualState.Setters>
									<Setter Property="BackgroundColor" Value="{DynamicResource EntryBackground}" />
								</VisualState.Setters>
							</VisualState>
						</VisualStateGroup>
					</VisualStateGroupList>
				</Setter>
			</Style>
			<Style TargetType="Button" x:Key="CustomButtonStyle">
				<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource ButtonLightBackColor}, Dark={StaticResource ButtonDarkBackColor}}" />
				<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
				<Setter Property="FontFamily" Value="OpenSansRegular"/>
				<Setter Property="FontSize" Value="14"/>
				<Setter Property="CornerRadius" Value="8"/>
				<Setter Property="Padding" Value="14,10"/>
				<Setter Property="MinimumHeightRequest" Value="44"/>
				<Setter Property="MinimumWidthRequest" Value="44"/>
				<Setter Property="VisualStateManager.VisualStateGroups">
					<VisualStateGroupList>
						<VisualStateGroup x:Name="CommonStates">
							<VisualState x:Name="Normal" />
							<VisualState x:Name="Disabled">
								<VisualState.Setters>
									<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray950}, Dark={StaticResource Gray200}}" />
									<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray600}}" />
								</VisualState.Setters>
							</VisualState>
							<VisualState x:Name="PointerOver">
								<VisualState.Setters>
									<Setter Property="BackgroundColor" Value="{DynamicResource ButtonBackColorOnMouseOver}" />
								</VisualState.Setters>
							</VisualState>
						</VisualStateGroup>
					</VisualStateGroupList>
				</Setter>
			</Style>
		</ResourceDictionary>
	</ContentPage.Resources>
	<StackLayout>
		<Label Text="{Binding LoginText}" FontSize="Large" HorizontalOptions="CenterAndExpand" Margin="0,20,0,0" />
		<Entry Placeholder="Email" Text="{Binding UserLoginDTO.Email}" Margin="20"/>
		<Entry Placeholder="{Binding PasswordText}" IsPassword="True" Text="{Binding UserLoginDTO.Password}" Margin="20" />
		<Button Text="{Binding LoginButtonText}" 
				Command="{Binding LoginCommand}" 
				HorizontalOptions="CenterAndExpand" 
				Margin="0,20,0,0"
				Style="{StaticResource CustomButtonStyle}" />
		<ActivityIndicator IsRunning="{Binding IsLoggingIn}" IsVisible="{Binding IsLoggingIn}" />
		<Label Text="{Binding ErrorMessage}" TextColor="Red" IsVisible="{Binding IsErrorVisible}" HorizontalOptions="CenterAndExpand" Margin="0,20,0,0" />
		<StackLayout Orientation="Horizontal" HorizontalOptions="CenterAndExpand" Margin="0,20,0,0">
			<Label Text="{Binding NotRegisteredText}" VerticalOptions="Center" Margin="10,0,0,0" />
			<StackLayout Orientation="Horizontal" HorizontalOptions="CenterAndExpand" Margin="0,0,0,0">
				<Label Text="{Binding CreateAccountText}" VerticalOptions="Center" Margin="10,0,0,0">
					<Label.GestureRecognizers>
						<TapGestureRecognizer Command="{Binding RegisterCommand}" />
					</Label.GestureRecognizers>
					<Label.TextDecorations>
						<TextDecorations>Underline</TextDecorations>
					</Label.TextDecorations>
				</Label>
			</StackLayout>
		</StackLayout>
	</StackLayout>
</ContentPage>